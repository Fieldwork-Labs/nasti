/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as PrivateImport } from "./routes/_private"
import { Route as IndexImport } from "./routes/index"
import { Route as InvitationsAcceptImport } from "./routes/invitations.accept"
import { Route as AuthSetPasswordImport } from "./routes/auth/set-password"
import { Route as AuthResetPasswordRequestImport } from "./routes/auth/reset-password-request"
import { Route as AuthResetPasswordConfirmImport } from "./routes/auth/reset-password-confirm"
import { Route as AuthResetPasswordImport } from "./routes/auth/reset-password"
import { Route as AuthLoginImport } from "./routes/auth/login"
import { Route as AuthConfirmSignupImport } from "./routes/auth/confirm-signup"
import { Route as PrivateTripsIndexImport } from "./routes/_private/trips/index"
import { Route as PrivateSpeciesIndexImport } from "./routes/_private/species/index"
import { Route as PrivateSettingsIndexImport } from "./routes/_private/settings/index"
import { Route as PrivatePeopleIndexImport } from "./routes/_private/people/index"
import { Route as PrivateInvitationsIndexImport } from "./routes/_private/invitations/index"
import { Route as PrivateSettingsStorageLocationsImport } from "./routes/_private/settings/storage-locations"
import { Route as PrivateSettingsOrganisationDetailsImport } from "./routes/_private/settings/organisation-details"
import { Route as PrivateInvitationsNewImport } from "./routes/_private/invitations/new"
import { Route as PrivateTripsIdIndexImport } from "./routes/_private/trips/$id/index"
import { Route as PrivateSpeciesIdIndexImport } from "./routes/_private/species/$id/index"
import { Route as PrivateTripsIdEditImport } from "./routes/_private/trips/$id/edit"

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: "/_private",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const InvitationsAcceptRoute = InvitationsAcceptImport.update({
  id: "/invitations/accept",
  path: "/invitations/accept",
  getParentRoute: () => rootRoute,
} as any)

const AuthSetPasswordRoute = AuthSetPasswordImport.update({
  id: "/auth/set-password",
  path: "/auth/set-password",
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRequestRoute = AuthResetPasswordRequestImport.update({
  id: "/auth/reset-password-request",
  path: "/auth/reset-password-request",
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordConfirmRoute = AuthResetPasswordConfirmImport.update({
  id: "/auth/reset-password-confirm",
  path: "/auth/reset-password-confirm",
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: "/auth/reset-password",
  path: "/auth/reset-password",
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: "/auth/login",
  path: "/auth/login",
  getParentRoute: () => rootRoute,
} as any)

const AuthConfirmSignupRoute = AuthConfirmSignupImport.update({
  id: "/auth/confirm-signup",
  path: "/auth/confirm-signup",
  getParentRoute: () => rootRoute,
} as any)

const PrivateTripsIndexRoute = PrivateTripsIndexImport.update({
  id: "/trips/",
  path: "/trips/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSpeciesIndexRoute = PrivateSpeciesIndexImport.update({
  id: "/species/",
  path: "/species/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSettingsIndexRoute = PrivateSettingsIndexImport.update({
  id: "/settings/",
  path: "/settings/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivatePeopleIndexRoute = PrivatePeopleIndexImport.update({
  id: "/people/",
  path: "/people/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateInvitationsIndexRoute = PrivateInvitationsIndexImport.update({
  id: "/invitations/",
  path: "/invitations/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSettingsStorageLocationsRoute =
  PrivateSettingsStorageLocationsImport.update({
    id: "/settings/storage-locations",
    path: "/settings/storage-locations",
    getParentRoute: () => PrivateRoute,
  } as any)

const PrivateSettingsOrganisationDetailsRoute =
  PrivateSettingsOrganisationDetailsImport.update({
    id: "/settings/organisation-details",
    path: "/settings/organisation-details",
    getParentRoute: () => PrivateRoute,
  } as any)

const PrivateInvitationsNewRoute = PrivateInvitationsNewImport.update({
  id: "/invitations/new",
  path: "/invitations/new",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateTripsIdIndexRoute = PrivateTripsIdIndexImport.update({
  id: "/trips/$id/",
  path: "/trips/$id/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSpeciesIdIndexRoute = PrivateSpeciesIdIndexImport.update({
  id: "/species/$id/",
  path: "/species/$id/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateTripsIdEditRoute = PrivateTripsIdEditImport.update({
  id: "/trips/$id/edit",
  path: "/trips/$id/edit",
  getParentRoute: () => PrivateRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_private": {
      id: "/_private"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    "/auth/confirm-signup": {
      id: "/auth/confirm-signup"
      path: "/auth/confirm-signup"
      fullPath: "/auth/confirm-signup"
      preLoaderRoute: typeof AuthConfirmSignupImport
      parentRoute: typeof rootRoute
    }
    "/auth/login": {
      id: "/auth/login"
      path: "/auth/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    "/auth/reset-password": {
      id: "/auth/reset-password"
      path: "/auth/reset-password"
      fullPath: "/auth/reset-password"
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    "/auth/reset-password-confirm": {
      id: "/auth/reset-password-confirm"
      path: "/auth/reset-password-confirm"
      fullPath: "/auth/reset-password-confirm"
      preLoaderRoute: typeof AuthResetPasswordConfirmImport
      parentRoute: typeof rootRoute
    }
    "/auth/reset-password-request": {
      id: "/auth/reset-password-request"
      path: "/auth/reset-password-request"
      fullPath: "/auth/reset-password-request"
      preLoaderRoute: typeof AuthResetPasswordRequestImport
      parentRoute: typeof rootRoute
    }
    "/auth/set-password": {
      id: "/auth/set-password"
      path: "/auth/set-password"
      fullPath: "/auth/set-password"
      preLoaderRoute: typeof AuthSetPasswordImport
      parentRoute: typeof rootRoute
    }
    "/invitations/accept": {
      id: "/invitations/accept"
      path: "/invitations/accept"
      fullPath: "/invitations/accept"
      preLoaderRoute: typeof InvitationsAcceptImport
      parentRoute: typeof rootRoute
    }
    "/_private/invitations/new": {
      id: "/_private/invitations/new"
      path: "/invitations/new"
      fullPath: "/invitations/new"
      preLoaderRoute: typeof PrivateInvitationsNewImport
      parentRoute: typeof PrivateImport
    }
    "/_private/settings/organisation-details": {
      id: "/_private/settings/organisation-details"
      path: "/settings/organisation-details"
      fullPath: "/settings/organisation-details"
      preLoaderRoute: typeof PrivateSettingsOrganisationDetailsImport
      parentRoute: typeof PrivateImport
    }
    "/_private/settings/storage-locations": {
      id: "/_private/settings/storage-locations"
      path: "/settings/storage-locations"
      fullPath: "/settings/storage-locations"
      preLoaderRoute: typeof PrivateSettingsStorageLocationsImport
      parentRoute: typeof PrivateImport
    }
    "/_private/invitations/": {
      id: "/_private/invitations/"
      path: "/invitations"
      fullPath: "/invitations"
      preLoaderRoute: typeof PrivateInvitationsIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/people/": {
      id: "/_private/people/"
      path: "/people"
      fullPath: "/people"
      preLoaderRoute: typeof PrivatePeopleIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/settings/": {
      id: "/_private/settings/"
      path: "/settings"
      fullPath: "/settings"
      preLoaderRoute: typeof PrivateSettingsIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/species/": {
      id: "/_private/species/"
      path: "/species"
      fullPath: "/species"
      preLoaderRoute: typeof PrivateSpeciesIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/trips/": {
      id: "/_private/trips/"
      path: "/trips"
      fullPath: "/trips"
      preLoaderRoute: typeof PrivateTripsIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/trips/$id/edit": {
      id: "/_private/trips/$id/edit"
      path: "/trips/$id/edit"
      fullPath: "/trips/$id/edit"
      preLoaderRoute: typeof PrivateTripsIdEditImport
      parentRoute: typeof PrivateImport
    }
    "/_private/species/$id/": {
      id: "/_private/species/$id/"
      path: "/species/$id"
      fullPath: "/species/$id"
      preLoaderRoute: typeof PrivateSpeciesIdIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/trips/$id/": {
      id: "/_private/trips/$id/"
      path: "/trips/$id"
      fullPath: "/trips/$id"
      preLoaderRoute: typeof PrivateTripsIdIndexImport
      parentRoute: typeof PrivateImport
    }
  }
}

// Create and export the route tree

interface PrivateRouteChildren {
  PrivateInvitationsNewRoute: typeof PrivateInvitationsNewRoute
  PrivateSettingsOrganisationDetailsRoute: typeof PrivateSettingsOrganisationDetailsRoute
  PrivateSettingsStorageLocationsRoute: typeof PrivateSettingsStorageLocationsRoute
  PrivateInvitationsIndexRoute: typeof PrivateInvitationsIndexRoute
  PrivatePeopleIndexRoute: typeof PrivatePeopleIndexRoute
  PrivateSettingsIndexRoute: typeof PrivateSettingsIndexRoute
  PrivateSpeciesIndexRoute: typeof PrivateSpeciesIndexRoute
  PrivateTripsIndexRoute: typeof PrivateTripsIndexRoute
  PrivateTripsIdEditRoute: typeof PrivateTripsIdEditRoute
  PrivateSpeciesIdIndexRoute: typeof PrivateSpeciesIdIndexRoute
  PrivateTripsIdIndexRoute: typeof PrivateTripsIdIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateInvitationsNewRoute: PrivateInvitationsNewRoute,
  PrivateSettingsOrganisationDetailsRoute:
    PrivateSettingsOrganisationDetailsRoute,
  PrivateSettingsStorageLocationsRoute: PrivateSettingsStorageLocationsRoute,
  PrivateInvitationsIndexRoute: PrivateInvitationsIndexRoute,
  PrivatePeopleIndexRoute: PrivatePeopleIndexRoute,
  PrivateSettingsIndexRoute: PrivateSettingsIndexRoute,
  PrivateSpeciesIndexRoute: PrivateSpeciesIndexRoute,
  PrivateTripsIndexRoute: PrivateTripsIndexRoute,
  PrivateTripsIdEditRoute: PrivateTripsIdEditRoute,
  PrivateSpeciesIdIndexRoute: PrivateSpeciesIdIndexRoute,
  PrivateTripsIdIndexRoute: PrivateTripsIdIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "": typeof PrivateRouteWithChildren
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/reset-password": typeof AuthResetPasswordRoute
  "/auth/reset-password-confirm": typeof AuthResetPasswordConfirmRoute
  "/auth/reset-password-request": typeof AuthResetPasswordRequestRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/invitations/accept": typeof InvitationsAcceptRoute
  "/invitations/new": typeof PrivateInvitationsNewRoute
  "/settings/organisation-details": typeof PrivateSettingsOrganisationDetailsRoute
  "/settings/storage-locations": typeof PrivateSettingsStorageLocationsRoute
  "/invitations": typeof PrivateInvitationsIndexRoute
  "/people": typeof PrivatePeopleIndexRoute
  "/settings": typeof PrivateSettingsIndexRoute
  "/species": typeof PrivateSpeciesIndexRoute
  "/trips": typeof PrivateTripsIndexRoute
  "/trips/$id/edit": typeof PrivateTripsIdEditRoute
  "/species/$id": typeof PrivateSpeciesIdIndexRoute
  "/trips/$id": typeof PrivateTripsIdIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "": typeof PrivateRouteWithChildren
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/reset-password": typeof AuthResetPasswordRoute
  "/auth/reset-password-confirm": typeof AuthResetPasswordConfirmRoute
  "/auth/reset-password-request": typeof AuthResetPasswordRequestRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/invitations/accept": typeof InvitationsAcceptRoute
  "/invitations/new": typeof PrivateInvitationsNewRoute
  "/settings/organisation-details": typeof PrivateSettingsOrganisationDetailsRoute
  "/settings/storage-locations": typeof PrivateSettingsStorageLocationsRoute
  "/invitations": typeof PrivateInvitationsIndexRoute
  "/people": typeof PrivatePeopleIndexRoute
  "/settings": typeof PrivateSettingsIndexRoute
  "/species": typeof PrivateSpeciesIndexRoute
  "/trips": typeof PrivateTripsIndexRoute
  "/trips/$id/edit": typeof PrivateTripsIdEditRoute
  "/species/$id": typeof PrivateSpeciesIdIndexRoute
  "/trips/$id": typeof PrivateTripsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/_private": typeof PrivateRouteWithChildren
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/reset-password": typeof AuthResetPasswordRoute
  "/auth/reset-password-confirm": typeof AuthResetPasswordConfirmRoute
  "/auth/reset-password-request": typeof AuthResetPasswordRequestRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/invitations/accept": typeof InvitationsAcceptRoute
  "/_private/invitations/new": typeof PrivateInvitationsNewRoute
  "/_private/settings/organisation-details": typeof PrivateSettingsOrganisationDetailsRoute
  "/_private/settings/storage-locations": typeof PrivateSettingsStorageLocationsRoute
  "/_private/invitations/": typeof PrivateInvitationsIndexRoute
  "/_private/people/": typeof PrivatePeopleIndexRoute
  "/_private/settings/": typeof PrivateSettingsIndexRoute
  "/_private/species/": typeof PrivateSpeciesIndexRoute
  "/_private/trips/": typeof PrivateTripsIndexRoute
  "/_private/trips/$id/edit": typeof PrivateTripsIdEditRoute
  "/_private/species/$id/": typeof PrivateSpeciesIdIndexRoute
  "/_private/trips/$id/": typeof PrivateTripsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | ""
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/reset-password-confirm"
    | "/auth/reset-password-request"
    | "/auth/set-password"
    | "/invitations/accept"
    | "/invitations/new"
    | "/settings/organisation-details"
    | "/settings/storage-locations"
    | "/invitations"
    | "/people"
    | "/settings"
    | "/species"
    | "/trips"
    | "/trips/$id/edit"
    | "/species/$id"
    | "/trips/$id"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | ""
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/reset-password-confirm"
    | "/auth/reset-password-request"
    | "/auth/set-password"
    | "/invitations/accept"
    | "/invitations/new"
    | "/settings/organisation-details"
    | "/settings/storage-locations"
    | "/invitations"
    | "/people"
    | "/settings"
    | "/species"
    | "/trips"
    | "/trips/$id/edit"
    | "/species/$id"
    | "/trips/$id"
  id:
    | "__root__"
    | "/"
    | "/_private"
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/reset-password-confirm"
    | "/auth/reset-password-request"
    | "/auth/set-password"
    | "/invitations/accept"
    | "/_private/invitations/new"
    | "/_private/settings/organisation-details"
    | "/_private/settings/storage-locations"
    | "/_private/invitations/"
    | "/_private/people/"
    | "/_private/settings/"
    | "/_private/species/"
    | "/_private/trips/"
    | "/_private/trips/$id/edit"
    | "/_private/species/$id/"
    | "/_private/trips/$id/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRoute: typeof PrivateRouteWithChildren
  AuthConfirmSignupRoute: typeof AuthConfirmSignupRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthResetPasswordConfirmRoute: typeof AuthResetPasswordConfirmRoute
  AuthResetPasswordRequestRoute: typeof AuthResetPasswordRequestRoute
  AuthSetPasswordRoute: typeof AuthSetPasswordRoute
  InvitationsAcceptRoute: typeof InvitationsAcceptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRoute: PrivateRouteWithChildren,
  AuthConfirmSignupRoute: AuthConfirmSignupRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthResetPasswordConfirmRoute: AuthResetPasswordConfirmRoute,
  AuthResetPasswordRequestRoute: AuthResetPasswordRequestRoute,
  AuthSetPasswordRoute: AuthSetPasswordRoute,
  InvitationsAcceptRoute: InvitationsAcceptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_private",
        "/auth/confirm-signup",
        "/auth/login",
        "/auth/reset-password",
        "/auth/reset-password-confirm",
        "/auth/reset-password-request",
        "/auth/set-password",
        "/invitations/accept"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/invitations/new",
        "/_private/settings/organisation-details",
        "/_private/settings/storage-locations",
        "/_private/invitations/",
        "/_private/people/",
        "/_private/settings/",
        "/_private/species/",
        "/_private/trips/",
        "/_private/trips/$id/edit",
        "/_private/species/$id/",
        "/_private/trips/$id/"
      ]
    },
    "/auth/confirm-signup": {
      "filePath": "auth/confirm-signup.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx"
    },
    "/auth/reset-password-confirm": {
      "filePath": "auth/reset-password-confirm.tsx"
    },
    "/auth/reset-password-request": {
      "filePath": "auth/reset-password-request.tsx"
    },
    "/auth/set-password": {
      "filePath": "auth/set-password.tsx"
    },
    "/invitations/accept": {
      "filePath": "invitations.accept.tsx"
    },
    "/_private/invitations/new": {
      "filePath": "_private/invitations/new.tsx",
      "parent": "/_private"
    },
    "/_private/settings/organisation-details": {
      "filePath": "_private/settings/organisation-details.tsx",
      "parent": "/_private"
    },
    "/_private/settings/storage-locations": {
      "filePath": "_private/settings/storage-locations.tsx",
      "parent": "/_private"
    },
    "/_private/invitations/": {
      "filePath": "_private/invitations/index.tsx",
      "parent": "/_private"
    },
    "/_private/people/": {
      "filePath": "_private/people/index.tsx",
      "parent": "/_private"
    },
    "/_private/settings/": {
      "filePath": "_private/settings/index.tsx",
      "parent": "/_private"
    },
    "/_private/species/": {
      "filePath": "_private/species/index.tsx",
      "parent": "/_private"
    },
    "/_private/trips/": {
      "filePath": "_private/trips/index.tsx",
      "parent": "/_private"
    },
    "/_private/trips/$id/edit": {
      "filePath": "_private/trips/$id/edit.tsx",
      "parent": "/_private"
    },
    "/_private/species/$id/": {
      "filePath": "_private/species/$id/index.tsx",
      "parent": "/_private"
    },
    "/_private/trips/$id/": {
      "filePath": "_private/trips/$id/index.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
