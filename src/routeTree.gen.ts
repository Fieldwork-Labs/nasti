/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as PrivateImport } from "./routes/_private"
import { Route as IndexImport } from "./routes/index"
import { Route as AuthSetPasswordImport } from "./routes/auth/set-password"
import { Route as AuthLoginImport } from "./routes/auth/login"
import { Route as AuthConfirmSignupImport } from "./routes/auth/confirm-signup"
import { Route as PrivateLayoutImport } from "./routes/_private/layout"
import { Route as PrivateDashboardImport } from "./routes/_private/dashboard"
import { Route as PrivateTripsIndexImport } from "./routes/_private/trips/index"
import { Route as PrivateSpeciesIndexImport } from "./routes/_private/species/index"
import { Route as PrivateInvitationsIndexImport } from "./routes/_private/invitations/index"
import { Route as PrivateInvitationsNewImport } from "./routes/_private/invitations/new"

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: "/_private",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AuthSetPasswordRoute = AuthSetPasswordImport.update({
  path: "/auth/set-password",
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: "/auth/login",
  getParentRoute: () => rootRoute,
} as any)

const AuthConfirmSignupRoute = AuthConfirmSignupImport.update({
  path: "/auth/confirm-signup",
  getParentRoute: () => rootRoute,
} as any)

const PrivateLayoutRoute = PrivateLayoutImport.update({
  path: "/layout",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateDashboardRoute = PrivateDashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateTripsIndexRoute = PrivateTripsIndexImport.update({
  path: "/trips/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateSpeciesIndexRoute = PrivateSpeciesIndexImport.update({
  path: "/species/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateInvitationsIndexRoute = PrivateInvitationsIndexImport.update({
  path: "/invitations/",
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateInvitationsNewRoute = PrivateInvitationsNewImport.update({
  path: "/invitations/new",
  getParentRoute: () => PrivateRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_private": {
      id: "/_private"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    "/_private/dashboard": {
      id: "/_private/dashboard"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof PrivateDashboardImport
      parentRoute: typeof PrivateImport
    }
    "/_private/layout": {
      id: "/_private/layout"
      path: "/layout"
      fullPath: "/layout"
      preLoaderRoute: typeof PrivateLayoutImport
      parentRoute: typeof PrivateImport
    }
    "/auth/confirm-signup": {
      id: "/auth/confirm-signup"
      path: "/auth/confirm-signup"
      fullPath: "/auth/confirm-signup"
      preLoaderRoute: typeof AuthConfirmSignupImport
      parentRoute: typeof rootRoute
    }
    "/auth/login": {
      id: "/auth/login"
      path: "/auth/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    "/auth/set-password": {
      id: "/auth/set-password"
      path: "/auth/set-password"
      fullPath: "/auth/set-password"
      preLoaderRoute: typeof AuthSetPasswordImport
      parentRoute: typeof rootRoute
    }
    "/_private/invitations/new": {
      id: "/_private/invitations/new"
      path: "/invitations/new"
      fullPath: "/invitations/new"
      preLoaderRoute: typeof PrivateInvitationsNewImport
      parentRoute: typeof PrivateImport
    }
    "/_private/invitations/": {
      id: "/_private/invitations/"
      path: "/invitations"
      fullPath: "/invitations"
      preLoaderRoute: typeof PrivateInvitationsIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/species/": {
      id: "/_private/species/"
      path: "/species"
      fullPath: "/species"
      preLoaderRoute: typeof PrivateSpeciesIndexImport
      parentRoute: typeof PrivateImport
    }
    "/_private/trips/": {
      id: "/_private/trips/"
      path: "/trips"
      fullPath: "/trips"
      preLoaderRoute: typeof PrivateTripsIndexImport
      parentRoute: typeof PrivateImport
    }
  }
}

// Create and export the route tree

interface PrivateRouteChildren {
  PrivateDashboardRoute: typeof PrivateDashboardRoute
  PrivateLayoutRoute: typeof PrivateLayoutRoute
  PrivateInvitationsNewRoute: typeof PrivateInvitationsNewRoute
  PrivateInvitationsIndexRoute: typeof PrivateInvitationsIndexRoute
  PrivateSpeciesIndexRoute: typeof PrivateSpeciesIndexRoute
  PrivateTripsIndexRoute: typeof PrivateTripsIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateDashboardRoute: PrivateDashboardRoute,
  PrivateLayoutRoute: PrivateLayoutRoute,
  PrivateInvitationsNewRoute: PrivateInvitationsNewRoute,
  PrivateInvitationsIndexRoute: PrivateInvitationsIndexRoute,
  PrivateSpeciesIndexRoute: PrivateSpeciesIndexRoute,
  PrivateTripsIndexRoute: PrivateTripsIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "": typeof PrivateRouteWithChildren
  "/dashboard": typeof PrivateDashboardRoute
  "/layout": typeof PrivateLayoutRoute
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/invitations/new": typeof PrivateInvitationsNewRoute
  "/invitations": typeof PrivateInvitationsIndexRoute
  "/species": typeof PrivateSpeciesIndexRoute
  "/trips": typeof PrivateTripsIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "": typeof PrivateRouteWithChildren
  "/dashboard": typeof PrivateDashboardRoute
  "/layout": typeof PrivateLayoutRoute
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/invitations/new": typeof PrivateInvitationsNewRoute
  "/invitations": typeof PrivateInvitationsIndexRoute
  "/species": typeof PrivateSpeciesIndexRoute
  "/trips": typeof PrivateTripsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/_private": typeof PrivateRouteWithChildren
  "/_private/dashboard": typeof PrivateDashboardRoute
  "/_private/layout": typeof PrivateLayoutRoute
  "/auth/confirm-signup": typeof AuthConfirmSignupRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/set-password": typeof AuthSetPasswordRoute
  "/_private/invitations/new": typeof PrivateInvitationsNewRoute
  "/_private/invitations/": typeof PrivateInvitationsIndexRoute
  "/_private/species/": typeof PrivateSpeciesIndexRoute
  "/_private/trips/": typeof PrivateTripsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | ""
    | "/dashboard"
    | "/layout"
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/set-password"
    | "/invitations/new"
    | "/invitations"
    | "/species"
    | "/trips"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | ""
    | "/dashboard"
    | "/layout"
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/set-password"
    | "/invitations/new"
    | "/invitations"
    | "/species"
    | "/trips"
  id:
    | "__root__"
    | "/"
    | "/_private"
    | "/_private/dashboard"
    | "/_private/layout"
    | "/auth/confirm-signup"
    | "/auth/login"
    | "/auth/set-password"
    | "/_private/invitations/new"
    | "/_private/invitations/"
    | "/_private/species/"
    | "/_private/trips/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRoute: typeof PrivateRouteWithChildren
  AuthConfirmSignupRoute: typeof AuthConfirmSignupRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSetPasswordRoute: typeof AuthSetPasswordRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRoute: PrivateRouteWithChildren,
  AuthConfirmSignupRoute: AuthConfirmSignupRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSetPasswordRoute: AuthSetPasswordRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_private",
        "/auth/confirm-signup",
        "/auth/login",
        "/auth/set-password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/dashboard",
        "/_private/layout",
        "/_private/invitations/new",
        "/_private/invitations/",
        "/_private/species/",
        "/_private/trips/"
      ]
    },
    "/_private/dashboard": {
      "filePath": "_private/dashboard.tsx",
      "parent": "/_private"
    },
    "/_private/layout": {
      "filePath": "_private/layout.tsx",
      "parent": "/_private"
    },
    "/auth/confirm-signup": {
      "filePath": "auth/confirm-signup.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/set-password": {
      "filePath": "auth/set-password.tsx"
    },
    "/_private/invitations/new": {
      "filePath": "_private/invitations/new.tsx",
      "parent": "/_private"
    },
    "/_private/invitations/": {
      "filePath": "_private/invitations/index.tsx",
      "parent": "/_private"
    },
    "/_private/species/": {
      "filePath": "_private/species/index.tsx",
      "parent": "/_private"
    },
    "/_private/trips/": {
      "filePath": "_private/trips/index.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
